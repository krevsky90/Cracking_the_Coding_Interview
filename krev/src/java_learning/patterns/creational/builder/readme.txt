info:
https://refactoring.guru/design-patterns/builder

Алгоритм:
1) создать интерфейс Builder с шагами построения объекта
2) создать класс сущности, объект к-ой надо строить (например, Car):
    поля и сеттеры-геттеры
3) создать CarBuilder, к-ый:
- хранит поле Car
- создает драфт объекта Car
- имплементит методы интерфейса Builder (используя сеттеры Car)
- имеет свой метод getResult, к-ый возвращает объект Car

ОПЦИОНАЛЬНО: методы билдера могут возвращать ссылку на этот самый билдер (а не void). Тогда можно будет юзать метод chaining
ОПЦИОНАЛЬНО: создать класс Director, к-ый содержит ссылку на билдер. Методы директора могут создавать объекты с разным набором полей и значений, используя методы билдера
НО директор не возвращает объект из билдера! Объект получается только из конкретного экземпляра билдера после того,
как директор заставил билдер выполнить ряд операций по созданию и наполнению объекта (хранящегося в билдере)