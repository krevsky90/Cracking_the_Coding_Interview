info:
https://refactoring.guru/ru/design-patterns/flyweight

 Применимость
  Когда не хватает оперативной памяти для поддержки всех нужных объектов.

Шаги реализации
Разделите поля класса, который станет легковесом, на две части:
- внутреннее состояние: значения этих полей одинаковы для большого числа объектов;
- внешнее состояние (контекст): значения полей уникальны для каждого объекта.

Оставьте поля внутреннего состояния в классе, но убедитесь, что их значения неизменяемы. Эти поля должны инициализироваться только через конструктор.

Превратите поля внешнего состояния в параметры методов, где эти поля использовались. Затем удалите поля из класса.

Создайте фабрику, которая будет кешировать и повторно отдавать уже созданные объекты. Клиент должен запрашивать из этой фабрики легковеса с определённым внутренним состоянием, а не создавать его напрямую.

Клиент должен хранить или вычислять значения внешнего состояния (контекст) и передавать его в методы объекта легковеса.